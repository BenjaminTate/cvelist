on:
  schedule:
    - cron:  '0 1 * * 1,2,3,4,5'
    # every weekday at 1am

  workflow_dispatch:  # click the button on Github repo!

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
   # - name: Checkout
   #   uses: actions/checkout@v3.0.0      
   #   with:
        # Repository name with owner. For example, actions/checkout
        # Default: ${{ github.repository }}
   #     repository: 'CVEProject/cvelist'

        # The branch, tag or SHA to checkout. When checking out the repository that
        # triggered a workflow, this defaults to the reference or SHA for that event.
        # Otherwise, uses the default branch.
    #    ref: 'master'

    # REQUIRED step
    # Step 2: run the sync action
    - name: Upstream Sync
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.2
      with:
        # Branch receiving updates from the upstream repo, e.g. => main, master, prod
        target_sync_branch: 'master'
        # Input for passing secrets.GITHUB_TOKEN when disabling persistent auth in the checkout step
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Upstream repository, e.g. => aormsby/Fork-Sync-With-Upstream-action
        upstream_sync_repo: 'CVEProject/cvelist'
        # Branch to sync from, e.g. => main, master, dev
        upstream_sync_branch: 'master'
        # If set to 'true', runs verification test on all inputs and any testable actions that use them
        test_mode: false
        # Domain name to be used in upstream repo URL.
        host_domain: 'github.com'
        # Length of time used when fetching shallow repo data, should match how often you perform a sync
        shallow_since: '1 month ago'
        

    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."

    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."

    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}
